"""
This type stub file was generated by pyright.
"""

import ssl
from http.cookiejar import CookieJar
from typing import AsyncIterator, Callable, Dict, IO, Iterator, List, Mapping, Optional, Sequence, TYPE_CHECKING, Tuple, Union

"""
Type definitions for type checking purposes.
"""
if TYPE_CHECKING:
    ...
PrimitiveData = Optional[Union[str, int, float, bool]]
URLTypes = Union["URL", str]
QueryParamTypes = Union["QueryParams", Mapping[str, Union[PrimitiveData, Sequence[PrimitiveData]]], List[Tuple[str, PrimitiveData]], str, None]
HeaderTypes = Union["Headers", Dict[str, str], Dict[bytes, bytes], Sequence[Tuple[str, str]], Sequence[Tuple[bytes, bytes]]]
CookieTypes = Union["Cookies", CookieJar, Dict[str, str]]
CertTypes = Union[str, Tuple[str, str], Tuple[str, str, str]]
VerifyTypes = Union[str, bool, ssl.SSLContext]
TimeoutTypes = Union[Optional[float], Tuple[Optional[float], Optional[float], Optional[float], Optional[float]], "Timeout"]
ProxiesTypes = Union[URLTypes, "Proxy", Dict[URLTypes, Union[None, URLTypes, "Proxy"]]]
AuthTypes = Union[Tuple[Union[str, bytes], Union[str, bytes]], Callable[["Request"], "Request"], "Auth"]
RequestData = Union[dict, str, bytes, Iterator[bytes], AsyncIterator[bytes]]
FileContent = Union[IO[str], IO[bytes], str, bytes]
FileTypes = Union[FileContent, Tuple[Optional[str], FileContent], Tuple[Optional[str], FileContent, Optional[str]]]
RequestFiles = Union[Mapping[str, FileTypes], Sequence[Tuple[str, FileTypes]]]
