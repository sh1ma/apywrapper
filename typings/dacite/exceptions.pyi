"""
This type stub file was generated by pyright.
"""

from typing import Any, Dict, Optional, Set, Type

class DaciteError(Exception):
    ...


class DaciteFieldError(DaciteError):
    def __init__(self, field_path: Optional[str] = ...) -> None:
        ...
    
    def update_path(self, parent_field_path: str) -> None:
        ...
    


class WrongTypeError(DaciteFieldError):
    def __init__(self, field_type: Type, value: Any, field_path: Optional[str] = ...) -> None:
        ...
    
    def __str__(self) -> str:
        ...
    


class MissingValueError(DaciteFieldError):
    def __init__(self, field_path: Optional[str] = ...) -> None:
        ...
    
    def __str__(self) -> str:
        ...
    


class UnionMatchError(WrongTypeError):
    def __str__(self) -> str:
        ...
    


class StrictUnionMatchError(DaciteFieldError):
    def __init__(self, union_matches: Dict[Type, Any], field_path: Optional[str] = ...) -> None:
        ...
    
    def __str__(self) -> str:
        ...
    


class ForwardReferenceError(DaciteError):
    def __init__(self, message: str) -> None:
        ...
    
    def __str__(self) -> str:
        ...
    


class UnexpectedDataError(DaciteError):
    def __init__(self, keys: Set[str]) -> None:
        ...
    
    def __str__(self) -> str:
        ...
    


