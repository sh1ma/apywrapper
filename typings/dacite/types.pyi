"""
This type stub file was generated by pyright.
"""

from typing import Any, Callable, Dict, List, Optional, Type, TypeVar

T = TypeVar("T", bound=Any)
def transform_value(type_hooks: Dict[Type, Callable[[Any], Any]], cast: List[Type], target_type: Type, value: Any) -> Any:
    ...

def extract_origin_collection(collection: Type) -> Type:
    ...

def is_optional(type_: Type) -> bool:
    ...

def extract_optional(optional: Type[Optional[T]]) -> T:
    ...

def is_generic(type_: Type) -> bool:
    ...

def is_union(type_: Type) -> bool:
    ...

def is_literal(type_: Type) -> bool:
    ...

def is_new_type(type_: Type) -> bool:
    ...

def extract_new_type(type_: Type) -> Type:
    ...

def is_init_var(type_: Type) -> bool:
    ...

def is_instance(value: Any, type_: Type) -> bool:
    ...

def is_generic_collection(type_: Type) -> bool:
    ...

def extract_generic(type_: Type) -> tuple:
    ...

def is_subclass(sub_type: Type, base_type: Type) -> bool:
    ...

